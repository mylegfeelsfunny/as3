package com.office365.view.ui.experience.scenes{	import com.afcomponents.umap.types.AutoSizeType;	import com.deepfocus.as3.templates.microsite.AbstractMain;	import com.deepfocus.as3.utils.LibraryAssetRetriever;	import com.greensock.TweenLite;	import com.greensock.easing.Strong;	import com.greensock.plugins.*;	import com.office365.ApplicationFacade;	import com.office365.model.DataCacheProxy;	import com.office365.view.ui.experience.event.SceneEvent;	import com.office365.view.ui.section6ui.BoardRoom;	import com.office365.view.ui.section6ui.TimeSquare;	import com.deepfocus.as3.utils.StringUtils;	import com.deepfocus.as3.utils.TextUtils;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.TimerEvent;	import flash.text.TextFieldAutoSize;	import flash.utils.Timer;		public final class Scene6 extends FlashScene	{		private var _boardRoom:BoardRoom;		private var _timeSquare:TimeSquare;		private var _dcProxy:DataCacheProxy;		private var _logoDimensions:Object;				private var _animationTimer:Timer;		private var _index:int = 0;		private var _logo:MovieClip;				private var _introwebsite:MovieClip;		private var _webpages:MovieClip;		private var _website:MovieClip;				//private var _sharepoint:MovieClip;		public function Scene6($linkedIn:Object, $classInfo:Object)		{			super($linkedIn, $classInfo);		}				//--------------------------------------------------------------------------		//  ACCESSORS		//--------------------------------------------------------------------------				//--------------------------------------------------------------------------		//  INIT		//--------------------------------------------------------------------------				//--------------------------------------------------------------------------		//  PUBLIC METHODS		//--------------------------------------------------------------------------		override public function prepareBody():void		{			trace(this, "prepareBody" );			var facade:ApplicationFacade = ApplicationFacade.getInstance();			_dcProxy = facade.retrieveProxy(DataCacheProxy.NAME) as DataCacheProxy;						//--------------------------------------------------------------------------			// ADD BACKWARDS IN ORDER OF APPEARANCE 			//--------------------------------------------------------------------------			var tsq:MovieClip = LibraryAssetRetriever.getAsset("timesquare_mc");			_timeSquare = new TimeSquare(tsq, AbstractMain.PATH+_xml.video.(@id=="timesquare"));			_timeSquare.addEventListener("finished", onTimeSquareFinishedHandler, false, 0, true);			_body.addChild(_timeSquare);						var br:MovieClip = LibraryAssetRetriever.getAsset("boardroom_mc");			_boardRoom = new BoardRoom(br, AbstractMain.PATH+_xml.video.(@id=="boardroom"));			_boardRoom.addEventListener("finished", onBoardRoomFinishedHandler, false, 0, true);			_timeSquare.visible = false;			_body.addChild(_boardRoom);									_website = LibraryAssetRetriever.getAsset("website_mc");			_website.visible = false;			_body.addChild(_website);						_webpages = LibraryAssetRetriever.getAsset("webpages_mc");			_webpages.visible = false;			_body.addChild(_webpages);						_introwebsite = LibraryAssetRetriever.getAsset("websiteintro_mc");			_body.addChild(_introwebsite);			_body.addChild(_timeSquare);			_body.stage.dispatchEvent(new Event(Event.RESIZE));			super.prepareBody();		}				override public function resize(obj:Object):void		{			_introwebsite.width = obj.width;			_introwebsite.height = obj.height;			_webpages.width = obj.width;			_webpages.height = obj.height;			_website.width = obj.width;			_website.height = obj.height;			_boardRoom.width = obj.width;			_boardRoom.height = obj.height;						_timeSquare.resize(obj);						_body.y = obj.offsetY;		}				override public function playSection():void {			TweenPlugin.activate([TintPlugin]);			_logo = _dcProxy.logo;			_logoDimensions = {width:_logo.width, height:_logo.height}			var logoData:Object = _dcProxy.logoData;			resetLogo();						_website.logoMC.addChild(_logo);			_website.logoMC.removeChildAt(0);			_website.content.y = _website.logoMC.y + _website.logoMC.height + 10;			TweenLite.to(_website.content.tab, .01, {tint:logoData.color});			TweenLite.to(_website.content.bar, .01, {tint:logoData.color});			TweenLite.to(_website.bullets, .01, {tint:logoData.color});			_website.gotoAndStop(logoData.frame);						//var fullNameTarget:String = _xml.lists.targets.(@name==logoData.target)			var beginL:String = logoData.businessText.toString().toLowerCase().substr(0,1);			var start:String =(beginL == "a" || beginL == "e" || beginL == "i" || beginL == "o" || beginL == "u") ? "An " : "A ";						_website.header.title.text = "Welcome to "+ logoData.name;			_website.header.subtitle.text = start + logoData.businessText +" for " + StringUtils.toTitleCase(logoData.targetText);						var obj:Object = {index:6, type:'vo'};			dispatchEvent(new SceneEvent(SceneEvent.SOUND_CUE_EVENT, obj));						_introwebsite.addEventListener("done", onIntroPanelDoneHandler, false, 0, true);			_introwebsite.gotoAndPlay(2);			/*						_introwebsite.visible = false;			_boardRoom.visible = false;			_timeSquare.visible = true;			_timeSquare.setLogo(_logo);			_timeSquare.play();*/			obj = {origin:"experience", scene:"6"}			dispatchEvent(new SceneEvent(SceneEvent.TRACKING, obj));			super.playSection();		}				override public function destroyBody($e:Event):void {			_body.removeChild(_introwebsite);			_introwebsite = null;			_body.removeChild(_webpages);			_webpages = null;			_body.removeChild(_website);			_website = null;			_body.removeChild(_boardRoom);			_boardRoom = null;			_body.removeChild(_timeSquare);			_timeSquare = null;			super.destroyBody($e);		}				//--------------------------------------------------------------------------		// PRIVATE METHODS		//--------------------------------------------------------------------------		private function resetLogo():void		{			_logo.width = _logoDimensions.width;			_logo.height = _logoDimensions.height;			var scale:Number = 30 / _logo.width;			_logo.scaleX = _logo.scaleY = scale;			_logo.x = _logo.width * .5;			_logo.y = 0;		}		//--------------------------------------------------------------------------		//  CREATE / DESTROY		//--------------------------------------------------------------------------				//--------------------------------------------------------------------------		//  EVENT HANDLERS		//--------------------------------------------------------------------------		private function onIntroPanelDoneHandler($e:Event):void		{			trace(this, "onIntroPanelDoneHandler");			_body.stage.focus = null;						_introwebsite.visible = false;			_introwebsite.stop();			_website.visible = true;					_animationTimer = new Timer(3000, 1);			_animationTimer.addEventListener(TimerEvent.TIMER, animationHandler);			_animationTimer.start();					}		private function animationHandler($e:TimerEvent=null):void		{			trace(this, "animationHandler");			resetLogo();			_boardRoom.setLogo(_logo);						//_sharepoint.visible = false;			_website.visible = false;			_boardRoom.visible = true;			_boardRoom.play();						// kill animation events			_animationTimer.removeEventListener(TimerEvent.TIMER, animationHandler);			_animationTimer.stop();			_animationTimer = null;		}		private function onBoardRoomFinishedHandler($e:Event):void		{			_timeSquare.visible = true;			_boardRoom.visible = false;					// reset logo for _timeSquare			resetLogo();			_timeSquare.setLogo(_logo);			_timeSquare.play();		}				private function onTimeSquareFinishedHandler($e:Event):void		{			dispatchFinished();		}		}}