package com.office365.view.ui.pickers.overlay{	import com.greensock.TweenNano;	import com.greensock.easing.Strong;	import com.office365.model.DataCacheProxy;	import com.office365.view.ui.pickers.event.PickerEvent;	import com.office365.view.ui.pickers.overlay.event.OverlayEvent;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.IEventDispatcher;	import flash.events.MouseEvent;
			public final class Overlay extends EventDispatcher	{		private var _mc:MovieClip;				public function Overlay($mc:MovieClip)		{			_mc = $mc;			_init();		}				//--------------------------------------------------------------------------		//  ACCESSORS		//--------------------------------------------------------------------------		public function get mc():MovieClip { return _mc; }		//--------------------------------------------------------------------------		//  INIT		//--------------------------------------------------------------------------		private function _init():void		{			_mc.addEventListener(Event.REMOVED_FROM_STAGE, _kill, false, 0, true);			_mc.alpha = 0;			_mc.visible = false;						_mc.buttons.accept.buttonMode = true;			_mc.buttons.accept.useHandCursor = true;			if (_mc.buttons.deny) _mc.buttons.deny.buttonMode = true;			if (_mc.buttons.deny) _mc.buttons.deny.useHandCursor = true;			_mc.bkg.addEventListener(MouseEvent.CLICK, onButtonClickHandler, false, 0, true);		}				//--------------------------------------------------------------------------		//  PUBLIC METHODS		//--------------------------------------------------------------------------		public function animateIn():void{			//var evt:OverlayEvent = new OverlayEvent(OverlayEvent.OVERLAY_ACCEPTED);			_mc.visible = true;			TweenNano.to(_mc, 1, {alpha:1, ease:Strong.easeOut, overwrite:0});			_mc.buttons.accept.addEventListener(MouseEvent.CLICK, onButtonClickHandler, false, 0, true);			if (_mc.buttons.deny) _mc.buttons.deny.addEventListener(MouseEvent.CLICK, onButtonClickHandler, false, 0, true);			//auto-accept when in Playback mode			//	if(DataCacheProxy.EXPERIENCE_MODE > 1)	TweenNano.delayedCall(1, dispatchEvent, [evt]);		}				public function animateOut():void{			//var evt:OverlayEvent = new OverlayEvent(OverlayEvent.OVERLAY_ACCEPTED);			TweenNano.to(_mc, .3, {alpha:0, ease:Strong.easeOut, overwrite:0, onComplete:function():void{				_mc.visible = false;				_mc.buttons.accept.removeEventListener(MouseEvent.CLICK, onButtonClickHandler, false);				if (_mc.buttonsdeny) _mc.buttons.deny.removeEventListener(MouseEvent.CLICK, onButtonClickHandler, false);			}});			//auto-accept when in Playback mode			//	if(DataCacheProxy.EXPERIENCE_MODE > 1)	TweenNano.delayedCall(1, dispatchEvent, [evt]);		}				public function resize(obj:Object):void		{			_mc.bkg.width = obj.width;			_mc.bkg.height = obj.height;			_mc.buttons.x = (obj.width * .5) - (_mc.buttons.width * .5)			_mc.buttons.y = (obj.height * .5) - (_mc.buttons.height * .5)		}				//--------------------------------------------------------------------------		// PRIVATE METHODS		//--------------------------------------------------------------------------				//--------------------------------------------------------------------------		//  CREATE / DESTROY		//--------------------------------------------------------------------------		private function _kill($e:Event):void		{			//trace(this, "_kill");			_mc.removeEventListener(Event.REMOVED_FROM_STAGE, _kill, false);			_mc = null;		}		//--------------------------------------------------------------------------		//  EVENT HANDLERS		//--------------------------------------------------------------------------		private function onButtonClickHandler($e:MouseEvent):void		{			_mc.buttons.accept.removeEventListener(MouseEvent.CLICK, onButtonClickHandler, false);			if (_mc.buttons.deny) _mc.buttons.deny.removeEventListener(MouseEvent.CLICK, onButtonClickHandler, false);			if (MovieClip($e.currentTarget).name == "accept") {				dispatchEvent(new OverlayEvent(OverlayEvent.OVERLAY_ACCEPTED));			} else {				dispatchEvent(new OverlayEvent(OverlayEvent.OVERLAY_DENIED));				TweenNano.to(_mc, 1, {alpha:0, ease:Strong.easeOut, overwrite:0, onComplete:function():void {_mc.visible = false;}});			}		}	}}