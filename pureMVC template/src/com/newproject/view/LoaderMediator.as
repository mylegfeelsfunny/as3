package com.newproject.view{	import com.deepfocus.as3.utils.LibraryAssetRetriever;	import com.newproject.ApplicationFacade;	import com.newproject.AssetManager;		import flash.display.MovieClip;	import flash.events.Event;		import org.puremvc.as3.interfaces.IMediator;	import org.puremvc.as3.interfaces.INotification;	import org.puremvc.as3.patterns.mediator.Mediator;		public final class LoaderMediator extends Mediator implements IMediator	{		public static const NAME:String = "LoaderMediator";		private var _mc:MovieClip;		public function LoaderMediator(viewComponent:Object=null)		{			super(NAME, viewComponent);		}				//--------------------------------------------------------------------------		//  ACCESSORS		//--------------------------------------------------------------------------				public function get am():AssetManager { return viewComponent as AssetManager; }				//--------------------------------------------------------------------------		//  INIT		//--------------------------------------------------------------------------		override public function onRegister():void {			trace(this, 'onRegister' );		}				//--------------------------------------------------------------------------		// PUREMVC METHODS		//--------------------------------------------------------------------------		override public function listNotificationInterests():Array 		{			return [				ApplicationFacade.RESIZE			];		}				override public function handleNotification( notification:INotification ):void {			super.handleNotification(notification);			var name:String = notification.getName();			var body:Object = notification.getBody();						switch (name)			{				case ApplicationFacade.RESIZE:					_mc.width = body.width;					_mc.height = body.height;					_mc.y = body.offsetY;					break;			}					}				//--------------------------------------------------------------------------		// EVENT HANDLERS 		//--------------------------------------------------------------------------			}}